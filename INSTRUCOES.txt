
-------------------------------------------------------------------
Instruções para execução do projeto KartRank
-------------------------------------------------------------------

OBS: Este projeto foi criado usando o Visual Studio 2015 Community

------------------------------------
1-Modelagem de Software do projeto
------------------------------------
Optei por utilizar a modelagem software seguindo o padrão DDD( Domain Driven Development), ou seja desenvolvimento orientado por domínio.
Esta abordagem tem a vantagem de dividir as responsabilidades em camadas separadas, de modo a evitar a complexidade no desenvolvimento,e tornando a manutenção 
mais fácil e flexível para implementar novas funcionalidades.
  
O Solution do projeto está dividido nas seguintes camadas e com suas respectivas pastas:

1.1 Controles
 Esta camada exerce o papel de uma ViewControler", que é responsável por interagir com a camada de aplicação e preparar os dados para apresentação 
 na camada "View", que no nosso caso, seria a "Console"(Projeto Console Application") e "Formulário"(Projeto Windows Form).
   
1.2 Aplicacao
Esta camada conhece apenas a camada de domínio. As chamadas à camada de aplicação são feitas usando "Injeção de Dependência",através 
da passagem do construtor(Constructor Injection) o que possibilita o "desacoplamento" e remover dependências desnecessárias entre as classes.

Neste projeto, o usuário usa uma interface(Projetos Console ou Formulário) para enviar solicitar os serviços para a camada de aplicação, que pos vez,
chama um objeto do domínio/repositório para executar a operação de negócio.

Foram criadas as entidades(Piloto, Volta e ResultadoCorrida) e uma pasta de "serviços" para obter os dados de entrada
 Observações: 
   O arquivo "Dados.txt" está gravado no sub-diretório \ArquivosLog nas pastas dos projetos Console e Formulário
   Foi criado a chave "NomeArquivoLog" no app.config destes projetos, conforme visto abaixo:
	<appSettings>
	  <add key="NomeArquivoLog" value="Dados.txt" />
	</appSettings>
	
1.3 Repositorio
Esta camada é responsável pelo acesso aos dados e para tanto usamos, os dados obtidos da camada de serviço através da leitura
de um arquivo de log disponível no sub-diretório ArquivosLog\Dados.txt disponíveis nas pastas console e formulario.

1.4 Testes Unitários
 	
   Projeto para efetuar os testes unitários
   Foi usado o framework de Testes NUnit instalado através do Nuget, disponível na opção "Tools\Nuget Package Manager" do Visual Studio.
   Para executar os testes, com o botão direito do mouse no projeto "TestesUnitarios" e selecionar a opção "Runs Units Tests"( realiza todos os testes)
   ou "Debug Unit Tests"(caso queira debugar os testes) e vai abrir uma tela com a lista de métodos de testes criados com os respectivos resultados;
   
   Foi criado os métodos de testes que acessam os dados.
   - ObterDadosLog
   - ObterListaPilotos
   - ObterLitaVoltas
     
   Os testes são executados em 3 passos:
    -Passo 1 - Definição do cenário	
	       São definidos os dados de entrada
    -Passo 2 - Ação
	       É chamado os métodos para retornar o resultado
    -Passo 3 - Validação
	       È verificado se o resultado retornado está de acordo com o resultado esperado

-----------------------------------------------	  
2 -Passos para Obter os Resultados
-----------------------------------------------
      
 Para executar no Modo Console
 - Com o botão direito no Pasta Console, selecionar a opção "Set as Startup Project" que vai fazer com que este projeto seja 
 executado no momento do Build da Solution.
 
 Obs: Os resultados serão exibidos na console e gravados no arquivo "Resultado.txt" no caminho "..\KartRank\Console\bin" 
 
Para executar no Modo Formulário
 Com o botão direito no Pasta Console, selecionar a opção "Set as Startup Project" e após Build será exibido um tela com os seguintes botões.
  .Ver Resultado da Corrida
  .Melhor Volta do Piloto
  .Melhor Volta do Piloto
  .Velocidade Média de Cada Piloto na Corrida
  -Descobrir quanto tempo cada piloto chegou após o vencedor
 
 